name: hourly-taxi-demand-feature-pipeline

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

env:
  PYTHON_VERSION: 3.9
  POETRY_VERSION: 1.7.0
  POETRY_URL: https://install.python-poetry.org

jobs:
  feature_pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4  # Actualiza a actions/checkout@v4

      - name: Cache Poetry cache
        uses: actions/cache@v4  # Actualiza a actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ env.POETRY_VERSION }}

      - name: Cache Packages
        uses: actions/cache@v4  # Actualiza a actions/cache@v4
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('taxi_demand_predictor/.github/workflows/*.yml') }}

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4.  # Actualiza a actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        run: |
          curl -sSL ${{ env.POETRY_URL }} | python - --version ${{ env.POETRY_VERSION }}
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Dependencies
        run: poetry install
        
      - name: Run feature generation script
        env: 
          HOPSWORKS_PROJECT_NAME: ${{ secrets.HOPSWORKS_PROJECT_NAME }}
          HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
        run: poetry run jupyter nbconvert --to notebook --execute /taxi_demand_predictor/notebooks/12_feature_pipeline.ipynb
